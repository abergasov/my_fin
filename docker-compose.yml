version: '3'

volumes:
  data_volume:

services:

  app:
    image: my_fin:latest
    container_name: app_main.mf
    build:
      context: .
      dockerfile: cmd/Dockerfile
    restart: always
    depends_on:
      - dbMysql
    networks:
      - app-network
    command: ["/app/wait-for-it.sh", "dbMysql:3309", "--", "/app/my_fin"]

  dbMysql:
    image: mariadb
    env_file:
      - configs/common.env
    container_name: dbMysql.mf
    restart: always
    tty: true
    ports:
      - 3309:3306
    volumes:
      - data_volume:/var/lib/mysql/
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: webserver.mf
    restart: always
    tty: true
    depends_on:
      - "app"
    volumes:
      - ./configs/nginx:/etc/nginx/conf.d
      - ./front/dist:/etc/nginx/html
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot
    networks:
      - app-network
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

#Docker Networks
networks:
  app-network:
    driver: bridge